name: Playwright Scraper

on:
  workflow_dispatch:
    inputs:
      SCRAPER_URL:
        description: 'URL to scrape'
        required: false
        default: 'https://www.sreality.cz/hledani/pronajem/byty/praha?velikost=3%2Bkk'

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # -------- Node.js dependencies cache --------
      - name: Cache Node.js dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Install Node.js dependencies
        run: |
          npm ci
          npm install playwright archiver # Ensure playwright & archiver are installed

      # -------- Playwright browsers cache --------
      - name: Get Playwright version
        id: pw-version
        run: |
          PLAYWRIGHT_VERSION=$(npm ls @playwright/test --json | jq -r '.dependencies["@playwright/test"].version' || echo "unknown")
          echo "version=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT

      - name: Cache Playwright browsers
        id: cache-playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.pw-version.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-playwright-${{ steps.pw-version.outputs.version }}
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps
        env:
          CI: true

      - name: Install Playwright deps (Linux only)
        if: steps.cache-playwright.outputs.cache-hit == 'true' && runner.os == 'Linux'
        run: npx playwright install-deps
        env:
          CI: true

      - name: Save Playwright cache
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.pw-version.outputs.version }}

      # -------- Run scraper --------
      - name: Run scraper
        run: node scripts/scraper.js
        env:
          CI: true
          SCRAPER_URL: ${{ github.event.inputs.SCRAPER_URL }}

      # -------- Upload results --------
      - name: Upload scraped results
        uses: actions/upload-artifact@v4
        with:
          name: scraped-results
          path: scripts/results.zip
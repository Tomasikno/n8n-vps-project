{
  "createdAt": "2025-09-13T20:19:14.908Z",
  "updatedAt": "2025-09-16T12:15:47.000Z",
  "id": "uhr6F42n1TCqMsxM",
  "name": "Reality evaluator",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "url": "=https://api.github.com/repos/Tomasikno/n8n-vps-project/actions/runs/{{ $json.workflow_runs[0].id }}/artifacts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        864,
        1056
      ],
      "id": "900fe891-3cca-4ca3-8b40-e25c30f4ce9c",
      "name": "HTTP Request2",
      "credentials": {
        "httpBearerAuth": {
          "id": "GIJlYnfdPGtZ0ue4",
          "name": "GH token"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5a42c8c0-97b5-429d-b6f8-d7b38cec2d3a",
              "leftValue": "={{ $json.workflow_runs[0].status }}",
              "rightValue": "completed",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "a3534fef-86e1-4a28-8612-15c80620cbf5",
              "leftValue": "={{ $json.workflow_runs[0].status }}",
              "rightValue": "=failure",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        640,
        1152
      ],
      "id": "f4ba8582-2445-46c8-aaff-3ca31fdac094",
      "name": "if job is complete"
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        864,
        1296
      ],
      "id": "222c4d5e-813b-433f-aa3b-2072ee818126",
      "name": "Wait for job to complete",
      "webhookId": "cfea52d3-5a20-4ae4-b895-bfe37cd96b08"
    },
    {
      "parameters": {
        "amount": 1,
        "unit": "minutes"
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        192,
        1232
      ],
      "id": "92123dba-b9d7-4561-8bae-ceaed437bad5",
      "name": "Wait",
      "webhookId": "b2f23eca-8442-4c8d-9ff5-744e1b875187"
    },
    {
      "parameters": {
        "resource": "workflow",
        "owner": {
          "__rl": true,
          "value": "Tomasikno",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "n8n-vps-project",
          "mode": "name"
        },
        "workflowId": {
          "__rl": true,
          "value": 188985120,
          "mode": "list",
          "cachedResultName": "Playwright Scraper"
        },
        "ref": {
          "__rl": true,
          "value": "main",
          "mode": "list",
          "cachedResultName": "main"
        },
        "inputs": "={\n  \"SCRAPER_URL\": \"{{ $json.URL }}{{ $json.PRAGUE_LOCATION }}{{ $json.URL_PARAMS }}\",\n  \"SCRAPER_LIMIT\": \"{{ $json.SCRAPER_LIMIT }}\",\n  \"SCRAPER_PAGE_LIMIT\": \"{{ $json.SCRAPER_PAGE_LIMIT }}\",\n  \"HEADLESS\": \"{{ $json.HEADLESS }}\",\n  \"NAV_TIMEOUT_MS\": \"{{ $json.NAV_TIMEOUT_MS }}\",\n  \"ITEM_DELAY_MS\": \"{{ $json.ITEM_DELAY_MS }}\",\n  \"SCRAPER_CONCURRENCY\": \"{{ $json.SCRAPER_CONCURRENCY }}\"\n}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        -32,
        1232
      ],
      "id": "c240dc2a-c3c5-430b-a76e-6d85c474991a",
      "name": "Dispatch a workflow event",
      "webhookId": "f9e8637b-53e1-4421-b84a-8659d2ce5cb4",
      "credentials": {
        "githubApi": {
          "id": "QpiSErtcyFHm8E7R",
          "name": "GitHub account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.compression",
      "typeVersion": 1.1,
      "position": [
        1536,
        944
      ],
      "id": "8c0c9b55-3985-4fb5-9c85-3cd9fd47c803",
      "name": "Extract zip"
    },
    {
      "parameters": {
        "url": "={{ $json.artifacts[0].archive_download_url }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/vnd.github+json"
            },
            {
              "name": "X-GitHub-Api-Version",
              "value": "2022-11-28"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          },
          "response": {
            "response": {
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1312,
        944
      ],
      "id": "1d46512f-7116-4ffb-9526-cce40dee3dd0",
      "name": "Download result artifact",
      "credentials": {
        "httpBearerAuth": {
          "id": "GIJlYnfdPGtZ0ue4",
          "name": "GH token"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a real estate assistant and evaluator. Your job is to review flats on Sreality.cz\n and determine whether they are suitable for two tenants: the user and their best friend.\n\nTenant Requirements:\n\nTwo separate bedrooms.\n\nSpace in bedrooms for large desks with PCs.\n\nPreferably a living room.\n\nFor each flat listing, you must provide the following structured information:\n\nListing URL – link to the flat.\n\nImage URL – ideally an image of the flat disposition (floor plan). If not available, any representative image of the flat.\n\nPrice – split into:\n\nMain part (rent without utilities)\n\nServices/utilities part\n\nName/Title of the listing.\n\nShort description of the flat.\n\nEvaluation Summary – 1–2 sentences explaining whether this flat is suitable and why based on the tenant requirements.\n\nInstructions for the agent:\n\nScrape only flats matching basic user filters (e.g., size, price range if provided).\n\nAnalyze images to determine room layout: number of bedrooms, living room, and approximate space for desks.\n\nCheck if flat meets the tenant’s requirements; provide reasoning.\n\nOutput must be in JSON format for easy further processing. Example:\n\n{\n  \"url\": \"https://www.sreality.cz/detail/pronajem/byt/3+1/praha-3-example\",\n  \"image_url\": \"https://img.sreality.cz/floorplan.jpg\",\n  \"price\": {\n    \"rent\": 20000,\n    \"services\": 3000\n  },\n  \"name\": \"3+1 flat in Prague 3\",\n  \"description\": \"Spacious 3+1 flat with large living room and two bedrooms.\",\n  \"evaluation\": \"Suitable for the two tenants: two separate bedrooms, large enough for desks, and a living room for shared activities.\"\n}\n\n\nAdditional Notes:\n\nFocus on flats where tenants can comfortably work from home in their own bedrooms.\n\nWhen analyzing images, identify bedroom size approximately and note if a desk setup is plausible.\n\nIf the flat is not suitable, still include it in JSON but mark in evaluation: \"Not suitable because...\".\n\nAnd translate it to czech language.\n\nData provided:\n{{ $('Loop Over Items').item.json.url }}\n{{ $('Loop Over Items').item.json.title }}\n{{ $('Loop Over Items').item.json.description }}\n{{ $('Loop Over Items').item.json.images }}",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        3744,
        944
      ],
      "id": "caa5bce0-0abf-4923-ab00-83f571d37d34",
      "name": "AI Agent1",
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3760,
        1168
      ],
      "id": "2787cd14-c1fd-4db1-8fe1-7275b3595bad",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "x4WuZYjSfm0LFGHN",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "fromJson",
        "binaryPropertyName": "file_0",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        1728,
        944
      ],
      "id": "b7b278a4-e514-4950-8d93-b7c1a1604eee",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2544,
        944
      ],
      "id": "400f694e-4947-4a24-ba56-747fbe1aad6a",
      "name": "Split Out"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2848,
        944
      ],
      "id": "8661054d-fd7a-410e-8c8a-e68c98e16e14",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "value": "1296893266968444991",
          "mode": "list",
          "cachedResultName": "Čtverec",
          "cachedResultUrl": "https://discord.com/channels/1296893266968444991"
        },
        "channelId": {
          "__rl": true,
          "value": "1416817899582001356",
          "mode": "list",
          "cachedResultName": "bot-space",
          "cachedResultUrl": "https://discord.com/channels/1296893266968444991/1416817899582001356"
        },
        "content": "=🏠 New Flat Listing for Review\n\n📌 Title: {{ $json.output.name }}\n💰 Price: {{ $json.output.price.rent }} CZK (rent) + {{ $json.output.price.services }} CZK (services)\n📝 Description: {{ $json.output.description }}\n📊 Evaluation: {{ $json.output.evaluation }}\n\n🔗 [View Listing]({{ $json.output.url }})\n🖼️ Image: {{ $json.output.image_url }}\n\n❓ 👉 Do you approve this listing? ✅❌",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        4304,
        944
      ],
      "id": "9965615c-5e49-4070-87ae-c9ce450775a8",
      "name": "Send a message",
      "webhookId": "de1ce1af-60b3-4512-b296-d10f9e33649f",
      "credentials": {
        "discordBotApi": {
          "id": "kODEUwvmo26ApL4g",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"url\": \"https://www.sreality.cz/detail/pronajem/byt/3+1/praha-3-example\",\n  \"image_url\": \"https://img.sreality.cz/floorplan.jpg\",\n  \"price\": {\n    \"rent\": 20000,\n    \"services\": 3000\n  },\n  \"name\": \"3+1 flat in Prague 3\",\n  \"description\": \"Spacious 3+1 flat with large living room and two bedrooms.\",\n  \"evaluation\": \"Suitable for the two tenants: two separate bedrooms, large enough for desks, and a living room for shared activities.\"\n}\n\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        3888,
        1168
      ],
      "id": "3f7cda22-fca0-4801-8f6a-f1e7ff1afb88",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "26e58cd7-1b15-8085-8b69-dc468605efcd",
          "mode": "list",
          "cachedResultName": "listings",
          "cachedResultUrl": "https://www.notion.so/26e58cd71b1580858b69dc468605efcd"
        },
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "name|title",
              "title": "={{ $('Loop Over Items').item.json.title }}"
            },
            {
              "key": "url|rich_text",
              "textContent": "={{ $('Loop Over Items').item.json.url }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        3520,
        944
      ],
      "id": "ff482b77-5eb5-473c-a230-cae5a581fbc6",
      "name": "Create a database page",
      "credentials": {
        "notionApi": {
          "id": "lDq6KxxGETipZmXY",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "70b9d77d-c723-4adf-90a0-bd9303bdb00a",
              "leftValue": "={{ $json.url }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        3296,
        944
      ],
      "id": "bdc789c5-1d10-4cc6-9d61-d43362f18fdf",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "getAll",
        "databaseId": {
          "__rl": true,
          "value": "26e58cd7-1b15-8085-8b69-dc468605efcd",
          "mode": "list",
          "cachedResultName": "listings",
          "cachedResultUrl": "https://www.notion.so/26e58cd71b1580858b69dc468605efcd"
        },
        "filterType": "manual",
        "filters": {
          "conditions": [
            {
              "key": "url|rich_text",
              "condition": "equals",
              "richTextValue": "={{ $json.url }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notion",
      "typeVersion": 2.2,
      "position": [
        3072,
        864
      ],
      "id": "d7ac609e-8285-47a1-89f2-0998db437fab",
      "name": "Get many database pages",
      "alwaysOutputData": true,
      "credentials": {
        "notionApi": {
          "id": "lDq6KxxGETipZmXY",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://discord.com/api/v10/channels/1416817899582001356/messages/{{ $json.id }}/reactions/%E2%9C%85/@me",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "discordBotApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4640,
        944
      ],
      "id": "71e8fc68-c508-419f-acec-e15aef454c19",
      "name": "HTTP Request",
      "credentials": {
        "discordBotApi": {
          "id": "kODEUwvmo26ApL4g",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "method": "PUT",
        "url": "=https://discord.com/api/v10/channels/1416817899582001356/messages/{{ $('Send a message').item.json.id }}/reactions/%E2%9D%8C/@me",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "discordBotApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {}
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5168,
        1120
      ],
      "id": "b3d1161a-9660-451b-86f9-44259ae5c1fb",
      "name": "HTTP Request3",
      "credentials": {
        "discordBotApi": {
          "id": "kODEUwvmo26ApL4g",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={ \n\"SCRAPER_LIMIT\":\"1000\",\n\"SCRAPER_PAGE_LIMIT\":\"\",\n\"NAV_TIMEOUT_MS\":\"30000\",\n\"ITEM_DELAY_MS\":\"1500\",\n\"PAGE_WAIT_MS\": \"1200\",\n\"HEADLESS\":\"true\",\n\"SCRAPER_CONCURRENCY\":\"3\",\n\"PRAGUE_LOCATION\": \"praha-7,praha-8,praha-3\",\n\"URL\":\"https://www.sreality.cz/hledani/pronajem/byty/\",\n\"URL_PARAMS\":\"?velikost=3%2B1%2C3%2Bkk%2C4%2Bkk&cena-od=22000&cena-do=40000\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -256,
        1232
      ],
      "id": "29f18bf0-d3eb-43d2-ad3a-863fde7456e5",
      "name": "Scraper params"
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "value": "1296893266968444991",
          "mode": "list",
          "cachedResultName": "Čtverec",
          "cachedResultUrl": "https://discord.com/channels/1296893266968444991"
        },
        "channelId": {
          "__rl": true,
          "value": "1416817899582001356",
          "mode": "list",
          "cachedResultName": "bot-space",
          "cachedResultUrl": "https://discord.com/channels/1296893266968444991/1416817899582001356"
        },
        "content": "No listings found, possible error present.",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        2368,
        800
      ],
      "id": "ef418206-370c-4e78-9585-4f0c86c530dd",
      "name": "Send message if results are empty",
      "webhookId": "74a4e7d5-2be6-407b-a8f4-94539896150c",
      "credentials": {
        "discordBotApi": {
          "id": "kODEUwvmo26ApL4g",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "f16e3018-d3d9-49ee-bd78-63331970300d",
              "leftValue": "={{ $json.data }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2048,
        944
      ],
      "id": "cc59ea0b-8688-4ed1-812f-4b1d95f9b524",
      "name": "is data empty"
    },
    {
      "parameters": {
        "resource": "message",
        "guildId": {
          "__rl": true,
          "value": "1296893266968444991",
          "mode": "list",
          "cachedResultName": "Čtverec",
          "cachedResultUrl": "https://discord.com/channels/1296893266968444991"
        },
        "channelId": {
          "__rl": true,
          "value": "1416817899582001356",
          "mode": "list",
          "cachedResultName": "bot-space",
          "cachedResultUrl": "https://discord.com/channels/1296893266968444991/1416817899582001356"
        },
        "content": "=✨ **No New Listings Found** ✨  \n\n🕒 **Time:** {{ $('Schedule Trigger').item.json['Readable date'] }}  \n\n📭 Everything is up to date — no fresh flats to review!",
        "options": {}
      },
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        1312,
        752
      ],
      "id": "edb678d0-832c-41a7-a81a-1869fb2248f3",
      "name": "Send error message",
      "webhookId": "3f0154df-e45c-4109-ad77-be558a1b8c4d",
      "credentials": {
        "discordBotApi": {
          "id": "kODEUwvmo26ApL4g",
          "name": "Discord Bot account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.github.com/repos/Tomasikno/n8n-vps-project/actions/runs",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBearerAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        416,
        1232
      ],
      "id": "70c528d5-8630-4e5d-b733-a77a5e8562a9",
      "name": "Check actions status",
      "credentials": {
        "httpBearerAuth": {
          "id": "GIJlYnfdPGtZ0ue4",
          "name": "GH token"
        }
      }
    },
    {
      "parameters": {
        "amount": 15
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4096,
        944
      ],
      "id": "0c8c2e90-f9f5-447c-8260-1bbf57af5634",
      "name": "Wait1",
      "webhookId": "1029d1b9-8df3-461d-82ea-7f1e2edd7b42"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4912,
        1040
      ],
      "id": "5f4dd01a-9d52-4861-a6d0-c311b73943ce",
      "name": "Wait2",
      "webhookId": "d7a080eb-ca54-4b2e-b68e-f0cec938a9d5"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 18,
              "triggerAtMinute": 3
            },
            {
              "triggerAtHour": 10,
              "triggerAtMinute": "=05"
            },
            {
              "triggerAtHour": 22,
              "triggerAtMinute": 25
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -496,
        1232
      ],
      "id": "fedeed19-8f8f-43b2-97fc-ef02a6c88452",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4fdd1d6e-5a91-4f0b-aa55-d5123da714a7",
              "leftValue": "={{ $('Check actions status').item.json.workflow_runs[0].conclusion }}",
              "rightValue": "failure",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "ffc5b7f3-15f9-45fd-86a7-802fed0a29f9",
              "leftValue": "={{ $json.total_count }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1088,
        1056
      ],
      "id": "85f96266-029e-40a7-9797-85a098372bdf",
      "name": "if job failed"
    }
  ],
  "connections": {
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "if job failed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if job is complete": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait for job to complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for job to complete": {
      "main": [
        [
          {
            "node": "Check actions status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Check actions status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dispatch a workflow event": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract zip": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download result artifact": {
      "main": [
        [
          {
            "node": "Extract zip",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "is data empty",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Get many database pages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Create a database page": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many database pages": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create a database page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scraper params": {
      "main": [
        [
          {
            "node": "Dispatch a workflow event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message if results are empty": {
      "main": [
        []
      ]
    },
    "is data empty": {
      "main": [
        [
          {
            "node": "Send message if results are empty",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check actions status": {
      "main": [
        [
          {
            "node": "if job is complete",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Scraper params",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if job failed": {
      "main": [
        [
          {
            "node": "Send error message",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download result artifact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "2f645c29-1990-4488-a5eb-510de23306a8",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-13T20:19:14.919Z",
      "updatedAt": "2025-09-13T20:19:14.919Z",
      "role": "workflow:owner",
      "workflowId": "uhr6F42n1TCqMsxM",
      "projectId": "kqMrkEZYsdGVbgzw"
    }
  ],
  "tags": []
}